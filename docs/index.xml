<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Modernization Workshop Documentation on AWS Modernization Workshop Sample Docs</title>
    <link>https://aws-samples.github.io/aws-modernization-workshop-sample/</link>
    <description>Recent content in Modernization Workshop Documentation on AWS Modernization Workshop Sample Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://aws-samples.github.io/aws-modernization-workshop-sample/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setup Environment</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/1_setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/1_setup/</guid>
      <description>Building a workshop leverages several tools:
 Git Hugo Hugo learn theme CloudFormation templates  1. Clone Sample Repo You will need to have a little familiarity with git, if not you might want to lookup a git tutorial.
Start by cloning the base repo and push it to a repo on your own GitHub account. Change the name of myCompany-Workshop :)
git clone https://github.com/aws-samples/aws-modernization-workshop-base myCompany-Workshop  We use clone instead of fork as you will break this from the sample repo and change the name.</description>
    </item>
    
    <item>
      <title>Tools</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/35_extras/1_tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/35_extras/1_tools/</guid>
      <description>Building a workshop leverages several tools to make things a bit easier:
 Git Hugo - https://gohugo.io/ Hugo learn theme - https://learn.netlify.com/en/ CloudFormation templates - https://github.com/aws-samples/aws-modernization-workshop-sample/tree/master/code-samples/cloudformation Code Build examples - https://github.com/aws-samples/aws-modernization-workshop-sample/tree/master/code-samples/codebuild Skitch - Image editing for annotations in images https://apps.apple.com/us/app/skitch-snap-mark-up-share/id425955336?mt=12 VSCode IDE - https://code.visualstudio.com/   </description>
    </item>
    
    <item>
      <title>What&#39;s the story?</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/10_plan/1_story/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/10_plan/1_story/</guid>
      <description>Think about what you want to accomplish and how you want to educate users about your product. What is the use case or problem that your product solves for the end user and develop a story around it. Two things to have in the back of your mind while you think about this: 1. Customers don&amp;rsquo;t buy products they buy solutions to their problems and 2. Make learning fun, have a nice story that can entertain them while educating them at the same time.</description>
    </item>
    
    <item>
      <title>Edit and Build</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/10_editing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/10_editing/</guid>
      <description>Directory Tree Directory of artifacts you will add, change, delete during the course of building a workshop.
/ |-content |---_index.md |-static |---images |config.toml  Editing Hugo uses markdown to generate static html pages. This makes it easier to create a web based workshop as all you need to do is create documents using markdown and Hugo will create the pretty html for you. For additional information on markdown, visit the learn theme documentation page https://learn.</description>
    </item>
    
    <item>
      <title>Plan the Workshop</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/10_plan/2_plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/10_plan/2_plan/</guid>
      <description>High Level Workshop Planning  Determine the message and what you want the customer to learn. Remember to wrap your story around this so customers find it fun. Example: I want potential customers to learn how easy it is to instrument our testing product into their build pipeline.
 Think from a high level what components or systems will be needed. These are the building blocks that will save you time when you start to build the workshop.</description>
    </item>
    
    <item>
      <title>Tips</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/35_extras/10_tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/35_extras/10_tips/</guid>
      <description>Additional editing tips  Use Cloud9 for the IDE and workshop host for all participants. Having users setup their local workstations doesn&amp;rsquo;t work very well and often contributes to a poor user experience. Review the flow of other workshops. To create a new page, copy another document and rename it. The name is only important to the builders, but the actual name that shows in the navigation is the title at the top of the document.</description>
    </item>
    
    <item>
      <title>Samples</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/35_extras/20_samples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/35_extras/20_samples/</guid>
      <description>Samples Sample content can be found here https://github.com/aws-samples/aws-modernization-workshop-sample * content directory - content for creating an account and Cloud9 instance. Don&amp;rsquo;t forget the images in static/images * samples directory is CloudFormation, CodeBuild, and other samples. The CloudFormation folder is available publicly at https://modernization-workshop-bucket.s3-us-west-2.amazonaws.com/cfn/ so you can leverage existing templates for nesting and one-click deployments.
Example workshops Feel free to use the content and edit to your satisfaction
 https://atlassian.awsworkshop.io/ and git repo https://github.</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/20_testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/20_testing/</guid>
      <description>Testing Once you feel your workshop is complete, have a few other people test it. At this point you will probably need technical people to test it as the flow may be a little rough. hugo with no options will generate an html site in /public. But it&amp;rsquo;s also fairly easy to run hugo server and connect to localhost:1313 to view the workshop.
Once you have ironed out flow issues, have a few non-technical check the site for grammatical errors.</description>
    </item>
    
    <item>
      <title>Publish</title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/30_publish/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/30_publish/</guid>
      <description>Cleanup  Remove the directory docs, hugo-docs-content, samples, and public.
 Cleanup any unused artifacts, be sure to look in static/images  Publish Now that your workshop is ready, reach out to your PSA or SA and have them follow the process for getting your workshop published.
High level steps  The SA will review your submission and makes sure everything works.
 The SA will request a repo under aws-samples with the naming standard aws-modernization-workshop-with-{companyname} Once the repo is created, you will fork this repo, copy the content of your workshop to this repo, then issue a pull request.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://aws-samples.github.io/aws-modernization-workshop-sample/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aws-samples.github.io/aws-modernization-workshop-sample/readme/</guid>
      <description>Generate content to docs ## View site  hugo -c hugo-docs-content -d docs &amp;ndash;config hugo-docs-content/config.toml server run```
To view hugo http://localhost:1313/aws-modernization-workshop-sample/</description>
    </item>
    
  </channel>
</rss>